plugins {
 id 'org.springframework.boot' version '2.7.4'
 id 'io.spring.dependency-management' version '1.0.14.RELEASE'
 id 'java'
 id 'war'
    id "com.github.node-gradle.node" version "3.5.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
 compileOnly {
  extendsFrom annotationProcessor
 }
}

bootWar {
    enabled = true
}

bootJar {
    launchScript ()
}

repositories {
 mavenCentral()
}

dependencies {
 implementation 'org.springframework.boot:spring-boot-starter-web'
 compileOnly 'org.projectlombok:lombok'
 developmentOnly 'org.springframework.boot:spring-boot-devtools'
 annotationProcessor 'org.projectlombok:lombok'
 testImplementation 'org.springframework.boot:spring-boot-starter-test'
 implementation 'com.googlecode.json-simple:json-simple:1.1.1'
 implementation 'org.json:json:20211205'
 implementation 'org.apache.commons:commons-collections4:4.0'
 implementation 'org.springframework.session:spring-session-core'
 // MyBatis 라이브러리 의존성 추가
 runtimeOnly 'mysql:mysql-connector-java:8.0.25'
 implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
}

tasks.named('test') {
 useJUnitPlatform()
}

// 프론트엔드 프로젝트의 실제위치를 설정한다.
node {
    version = '16.17.1' // 설치할 node 버전
        yarnVersion = '1.13.0' // 설치할 yarn 버전
        download = true
        distBaseUrl = 'https://nodejs.org/dist' // node를 다운받을 수 있는 주소
        workDir = file("${rootDir}/src/main/frontend/nodejs") // node를 설치할 폴더를 설정
        yarnWorkDir = file("${rootDir}/src/main/frontend/yarn") // yarn을 설치할 폴더를 설정
    nodeModulesDir = file("${rootDir}/src/main/frontend/")
}

    // yarn install 즉 package.json에 추가된 의존 모듈을 설치하는 명령을 설정
    task yarnInstallProduction(type: YarnTask) {
        args = ['install']
    }

    // node와 yarn을 설치하고 yarn install 명령을 하나의 테스크로 묶었다.
    task nodeModuleInstall {
        doLast {
            nodeSetup.execute() // node를 설치
            yarnSetup.execute() // yarn을 설치
            yarnInstallProduction.execute() // package.json에 추가된 의존 모듈을 설치(yarn install)
        }
    }

def reactAppDir = "$projectDir/src/main/frontend"

// 프로젝트 빌드 명령을 설정한다
// yran build 명령을 실행하는 것
// 이렇게 되면 프론트엔드 프로젝트가 빌드된다.
task yarnBuild(type: YarnTask) {
    inputs.dir "$reactAppDir"
    args = ['run', "build"]
}

    
// 빌드된 프론트엔드 파일을 백엔드 API서버 resources에 복사한다.
task copyDistToStatic(type: Copy) {
        // 빌드된 프론트엔드의 파일 위치
        from("${reactAppDir}/build") 
        // 백엔드 API 서버의 static 리소스로 복사할 위치
        into("${rootDir}/src/main/resources/static/")
        includeEmptyDirs = true
    }

    
    // gralde 빌드시 사용하는 task 프론트엔드 빌드와 복사까지 전과정을 수행한다
    // nodejs 설치 -> yarn 설치 -> node_modules 다운로드 -> front-end source 빌드 -> resource/static 복사
    // ./gradlew ~~~~~~~:frontEndBuild <= 빌드시 task 명을 포함시켜 빌드 
    task frontEndBuild {
        doLast {
            nodeModuleInstall.execute()
            yarnBuild.execute()
            copyDistToStatic.execute()
        }
    }